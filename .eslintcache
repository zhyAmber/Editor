[{"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\index.js":"1","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\App.js":"2","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\reportWebVitals.js":"3","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\components\\Button.jsx":"4","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\pages\\Editor.jsx":"5","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\components\\input.jsx":"6","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\api\\index.js":"7","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\api\\ajax.js":"8","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\utils\\storageUtils.js":"9","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\hooks\\useLocalStorage.js":"10"},{"size":547,"mtime":1679501959486,"results":"11","hashOfConfig":"12"},{"size":4822,"mtime":1679821636449,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1679501959491,"results":"14","hashOfConfig":"12"},{"size":388,"mtime":1679501959481,"results":"15","hashOfConfig":"12"},{"size":15554,"mtime":1679831523349,"results":"16","hashOfConfig":"12"},{"size":3742,"mtime":1679826552447,"results":"17","hashOfConfig":"12"},{"size":3872,"mtime":1679829064014,"results":"18","hashOfConfig":"12"},{"size":1026,"mtime":1679823747621,"results":"19","hashOfConfig":"12"},{"size":1530,"mtime":1679501959494,"results":"20","hashOfConfig":"12"},{"size":623,"mtime":1679501959485,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nz5yeu",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\index.js",[],["45","46"],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\App.js",["47","48","49","50"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Button from './components/Button';\r\nimport Editor from './pages/Editor';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nimport {\r\n  MenuOutlined\r\n} from '@ant-design/icons';\r\n// import {reqInput} from './api'\r\n\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useLocalStorage(\"content\",\"\");\r\n  const [css, setCss] = useState(`\r\n    .selected {\r\n      background-color: #ccc\r\n    }\r\n  `);\r\n  const [js, setJs] = useState(`\r\n  $(document).on('click', function(e) {\r\n    var el = e.target\r\n    $(document).find('body *').removeClass('selected Iamflag')\r\n    if(el.localName === 'html' || el.localName === 'body') { return }\r\n    $(el).addClass('selected Iamflag')\r\n\r\n    \r\n    var htmlStr = $('body').html()\r\n    // 标记字符查询结束位置\r\n    var end = htmlStr.indexOf('Iamflag')\r\n    // 查找html文本前面有多少个相同的标签\r\n    var reg = new RegExp('<' + $(el)[0].tagName.toLowerCase(), 'g')\r\n    var count = htmlStr.slice(0, end).match(reg)\r\n\r\n    console.log(reg, count)\r\n\r\n    window.parent.onIframeCallback({\r\n      index: count.length, //第几个标签\r\n      tagName: $(el)[0].tagName.toLowerCase() //标签名\r\n    })\r\n  })\r\n  `);\r\n  const [python, setPython] = useState('');\r\n  const [openedEditor, setOpenedEditor] = useState('html');\r\n  const [srcDoc, setSrcDoc] = useState('');\r\n  const Conversion = \"\\\\\";\r\n\r\n  // 空字符串：用户想在页面右边看html代码\r\n  // 有字符串：用户想要在页面右边看到他们的网站\r\n  const [htmlorweb,setHtmlorweb]=useLocalStorage(\"usehtmlorweb\",\"\")\r\n\r\n\r\n  //   <html>\r\n  //   <body>${html}</body>\r\n  //   <style>${css}</style>\r\n  //   <script>${js}</script>\r\n  //  </html>\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setSrcDoc(\r\n        `\r\n          <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js\"></script>\r\n          <script>${js}</script>\r\n         </html>\r\n\r\n           \r\n        `\r\n      )\r\n    }, 250)\r\n    // reqInput({\r\n    //   repodir:''\r\n    // }).then(res=>{\r\n    //   console.log(res);\r\n    // })\r\n    return () => { clearTimeout(timeOut) }\r\n  }, [html, css, js]);\r\n\r\n  const onTabClick = editorName => {\r\n    setOpenedEditor(editorName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <p>Welcome to Web Code Editor ！</p>\r\n      <div className=\"tab-button-container\">\r\n        <Button\r\n          title=\"HTML\"\r\n          onClick={() => {\r\n            onTabClick('html');\r\n          }}\r\n        />\r\n        <Button\r\n          title=\"CSS\"\r\n          onClick={() => {\r\n            onTabClick('css');\r\n          }}\r\n        />\r\n        <Button\r\n          title=\"JavaScript\"\r\n          onClick={() => {\r\n            onTabClick('js');\r\n          }}\r\n        />\r\n          <Button\r\n          title=\"Python\"\r\n          onClick={() => {\r\n            onTabClick('python');\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <br /> */}\r\n        <div className=\"pane_editor\">\r\n          <div className=\"pane_code\">\r\n            {openedEditor === 'html' ? (\r\n              <Editor language=\"xml\" value={html} setEditorState={setHtml} />\r\n            ) : openedEditor === 'css' ? (\r\n              <Editor language=\"css\" value={css} setEditorState={setCss} />\r\n            ) : openedEditor === 'python' ? (\r\n              <Editor language=\"python\" value={python} setEditorState={setPython} />\r\n            ) : (\r\n              <Editor language=\"javascript\" value={js} setEditorState={setJs} />\r\n            )\r\n            }\r\n\r\n            <div style={{position:'absolute',left:5,top:0,fontSize:20,zIndex:999,cursor:'pointer'}} \r\n            className='hoverbox'\r\n            onClick={()=>{\r\n              const res=window.prompt(\"Please input your web url\",htmlorweb)\r\n              if(typeof res===\"string\"){\r\n                setHtmlorweb(res)\r\n              }\r\n            }}><MenuOutlined /></div>\r\n          </div>\r\n          {/* <iframe\r\n              srcDoc={srcDoc}\r\n              title=\"output\"\r\n              sandbox=\"allow-scripts\"\r\n              \r\n              // width=\"100%\"\r\n              // height=\"100%\"\r\n            /> */}\r\n\r\n          <div className=\"pane_iframe\">\r\n            {htmlorweb.length===0?(<iframe\r\n              id=\"iframe\"\r\n              srcDoc={srcDoc}\r\n              title=\"output\"\r\n              sandbox=\"allow-scripts allow-same-origin\"\r\n              frameBorder=\"0\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />):<iframe\r\n              id=\"iframeweb\"\r\n              style={{width:'100%'}}\r\n              src={htmlorweb}\r\n            ></iframe>}\r\n            \r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\reportWebVitals.js",[],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\components\\Button.jsx",[],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\pages\\Editor.jsx",["51","52","53"],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\components\\input.jsx",["54"],"import React,{useState} from 'react';\r\nimport { message, Input, Button, notification } from 'antd';\r\nimport { reqInput } from '../api';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { FolderOutlined,FileOutlined } from '@ant-design/icons';\r\n\r\nexport const getJsonToTree = (data) => {\r\n  // 此处返回json结构\r\n  // 在DirectoryTree使用时加【】\r\n  let obj = {\r\n    title: <div style={{\r\n      display:'inline-block',\r\n      whiteSpace:'nowrap',\r\n      width:'100%',\r\n      overflow:'hidden',\r\n      textOverflow:'ellipsis'\r\n    }}>{data.type===\"folder\"?<FolderOutlined />:<FileOutlined />}{\" \"+data.name}</div>,\r\n    key: data.rel_path\r\n  }\r\n  // console.log(data, 'data');\r\n\r\n  if (data.type === \"folder\") {\r\n    obj['children'] = []\r\n    data.folders.forEach(i => {\r\n      obj.children.push(getJsonToTree(i))\r\n    })\r\n    data.files.forEach(i => {\r\n      obj.children.push(getJsonToTree(i))\r\n    })\r\n  }else{\r\n    obj['isLeaf']=true\r\n    obj['icon']=<div></div>\r\n  }\r\n  if (obj.children && obj.children.length === 0) {\r\n    delete obj.children\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\nconst InputDemo = (props) => {\r\n  const [InputValue, setInputValue] = useLocalStorage(\"clonedir\", \"git@github.com:zhyAmber/FYP.git\")\r\n  const [content, setContent] = useState(\"\")\r\n\r\n  const handleGetInputValue = (event) => {\r\n    setInputValue(event.target.value)\r\n    //let Storagedata=JSON.parse(this.localStorage.getItem('result.data: '))\r\n    //  console.log(\"Storagedata\",Storagedata)\r\n    // this.props.getTreeData(Storagedata.reponame,this.getData([Storagedata.foldertree]))\r\n  };\r\n\r\n\r\n  const getData = (data) => {\r\n    return getJsonToTree(data)\r\n  }\r\n\r\n  const InputSubmit = async () => {\r\n    console.log('传给后端的输入框数据value: ', InputValue);\r\n    message.destroy()\r\n    message.loading(\"Send Clone Request\",0)\r\n    let result = await reqInput(InputValue);\r\n    console.log('result: ', result);\r\n    console.log('result.data: ', result.data)\r\n    //let Storagedata=this.state.Storagedata\r\n    //let Storagedata=JSON.parse(localStorage.getItem('result.data: '))\r\n    // console.log('Storagedata',Storagedata)\r\n    if (result.status === 200) {\r\n      message.destroy()\r\n      notification.config({\r\n        placement: 'topLeft',\r\n        duration:3\r\n      });\r\n      notification.open({\r\n        message: <div style={{color:'green'}}>Clone successfully</div>,\r\n        description:<div><div>You have successfully cloned the repository:</div><div style={{fontWeight:'bolder'}}>{result.data.reponame}</div></div>,\r\n        onClick: () => {\r\n          console.log('Notification Clicked!');\r\n        },\r\n      })\r\n      localStorage.setItem('result.data: ', JSON.stringify(result.data))\r\n      const foldertreejson = getData(result.data.foldertree)\r\n      console.log(\"文档树结构2\", foldertreejson)\r\n      props.getTreeData(result.data.reponame, foldertreejson)\r\n\r\n      // localStorage.setItem('result.data: ', JSON.stringify(result.data))\r\n      //this.props.getTreeData(Storagedata.reponame,this.getData(Storagedata.foldertree))\r\n      setContent(result.data.foldertree.files)\r\n      props.setCommitHis(result.data.logs)\r\n    } else {\r\n      message.destroy()\r\n      message.error('Error when clone, please use ssh url');\r\n    }\r\n    //console.log('localstorage',localStorage)\r\n  };\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Input\r\n        style={{ width: \"50%\" }}\r\n        value={InputValue}\r\n        onChange={handleGetInputValue}\r\n      />\r\n      <Button type=\"primary\" onClick={InputSubmit}>Clone</Button>\r\n\r\n      {/* <div>\r\n          <input\r\n          value={this.state.content}\r\n          onChange={this.handleGetInputValue}\r\n        />\r\n        </div> */}\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default InputDemo;","D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\api\\index.js",[],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\api\\ajax.js",[],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\utils\\storageUtils.js",[],"D:\\文档\\大四上\\FYP\\Git交互项目\\Editor\\src\\hooks\\useLocalStorage.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":45,"column":9,"nodeType":"61","messageId":"62","endLine":45,"endColumn":19},{"ruleId":"59","severity":1,"message":"64","line":80,"column":9,"nodeType":"61","messageId":"62","endLine":80,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":155,"column":17,"nodeType":"67","endLine":159,"endColumn":14},{"ruleId":"59","severity":1,"message":"68","line":29,"column":64,"nodeType":"61","messageId":"62","endLine":29,"endColumn":68},{"ruleId":"69","severity":1,"message":"70","line":339,"column":22,"nodeType":"67","endLine":339,"endColumn":53},{"ruleId":"69","severity":1,"message":"70","line":438,"column":20,"nodeType":"67","endLine":460,"endColumn":17},{"ruleId":"59","severity":1,"message":"71","line":43,"column":10,"nodeType":"61","messageId":"62","endLine":43,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Conversion' is assigned a value but never used.","'onTabClick' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Tabs' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'content' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]